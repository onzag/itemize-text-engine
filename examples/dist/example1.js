import {
  __spreadProps,
  __spreadValues,
  __toESM,
  deserialize,
  deserializePlain,
  require_react,
  require_react_dom,
  sanitize,
  serialize,
  serializeString
} from "/dist/commons-2PRWFEI7.js";

// example1.tsx
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var TEXT_FROM_SERVER_1 = '<p style="position: fixed">this is some simple text</p><p class="malicious">that came from the server</p><p>and is being parsed by text engine</p><script>window.MALICIOUS = true<\/script>';
var TEXT_FROM_SERVER_2 = '<img src="https://external-server.com" /><p>invalid html</p></p>';
var TEXT_FROM_SERVER_3 = '<p>click <a href="https://external-server.com/malicious">here</a> or here <a href="./safe">here</a> </p>';
var TEXT_FROM_SERVER_4 = '<div class="container-happy"><p class="rich-text--sparkling-text">allowed custom class</p></div><div class="container-sad"><p>invalid container type</p></div><p>outside of container</p>';
var TEXT_FROM_SERVER_5 = '<a class="image"><div class="image-container"><div class="image-pad" style="padding-bottom: 56.25%"><img alt="example" data-src-height="720" data-src-id="FILEID" data-src-width="1280" loading="lazy"></div></div></a>';
var TEXT_FROM_SERVER_6 = "This is just\nSome plain text";
var sanitized1 = sanitize({
  fileResolver: null
}, {
  supportedContainers: null,
  supportedCustoms: null,
  supportedRichClasses: null,
  supportedTables: null,
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  supportsExternalLinks: true,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_1);
var sanitized2 = sanitize({
  fileResolver: null
}, {
  supportedContainers: null,
  supportedCustoms: null,
  supportedRichClasses: null,
  supportedTables: null,
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  supportsExternalLinks: true,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_2);
var sanitized3 = sanitize({
  fileResolver: null
}, {
  supportedContainers: [],
  supportedCustoms: [],
  supportedRichClasses: [],
  supportedTables: [],
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  // disabling external links
  supportsExternalLinks: false,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_3);
var sanitized4 = sanitize({
  fileResolver: null
}, {
  supportedContainers: ["happy"],
  supportedCustoms: [],
  supportedRichClasses: ["sparkling-text"],
  supportedTables: [],
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  // disabling external links
  supportsExternalLinks: false,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_4);
var sanitized4_2 = sanitize({
  fileResolver: null
}, {
  supportedContainers: [],
  supportedCustoms: [],
  supportedRichClasses: [],
  supportedTables: [],
  // disabling containers
  supportsContainers: false,
  supportsCustom: true,
  supportsCustomStyles: true,
  // disabling external links
  supportsExternalLinks: false,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_4);
var sanitized5 = sanitize({
  // resolving a file
  fileResolver: (id) => {
    return {
      src: "./img/example-img.jpeg"
      // no srcset specified
    };
  }
}, {
  supportedContainers: [],
  supportedCustoms: [],
  supportedRichClasses: [],
  supportedTables: [],
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  // disabling external links
  supportsExternalLinks: false,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_5);
var filesToAttach = [];
var cidFilesToAttach = [];
var sanitized5_2 = sanitize({
  // resolving a file
  fileResolver: (id) => {
    return {
      // this is dangerous, don't trust the file ID as it is
      // always generate own ids
      src: "cid:" + id
    };
  },
  mail: true,
  mailShouldAttachFile: (fileId) => {
    filesToAttach.push(fileId);
  },
  mailShouldAttachCidFile: (fileId) => {
    cidFilesToAttach.push(fileId);
  }
}, {
  supportedContainers: [],
  supportedCustoms: [],
  supportedRichClasses: [],
  supportedTables: [],
  supportsContainers: true,
  supportsCustom: true,
  supportsCustomStyles: true,
  // disabling external links
  supportsExternalLinks: false,
  supportsFiles: true,
  supportsFilesAccept: null,
  supportsImages: true,
  supportsImagesAccept: null,
  supportsLinks: true,
  supportsLists: true,
  supportsQuote: true,
  supportsRichClasses: true,
  supportsTables: true,
  supportsTemplating: true,
  supportsTitle: true,
  supportsVideos: true
}, TEXT_FROM_SERVER_5);
var textTree1 = deserialize(TEXT_FROM_SERVER_1);
var textTree1_2 = deserialize(sanitized1);
var textTree2 = deserialize(sanitized2);
var textTree3 = deserialize(sanitized3);
var textTree6 = deserializePlain(TEXT_FROM_SERVER_6);
var reSerialized6 = serialize(textTree6);
var textTree6_clone = __spreadProps(__spreadValues({}, textTree6), {
  rich: true,
  id: "MY_ID"
});
var reSerialized6_3 = serializeString(textTree6_clone);
function Example() {
  return /* @__PURE__ */ import_react.default.createElement("div", null, /* @__PURE__ */ import_react.default.createElement("h1", null, "Basic Parsing and Data Displaying"), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "simple parsing and deserializing, this example shows how to deserialize and build a tree safely note the sheer amount of elements that represent security issues are removed"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original HTML:"), /* @__PURE__ */ import_react.default.createElement("code", null, TEXT_FROM_SERVER_1), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (can be used in dangerouslySetInnerHTML):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized1), /* @__PURE__ */ import_react.default.createElement("div", null, "Deserialized HTML Tree (Unsanitized, Unsafe):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(textTree1, null, 2)), /* @__PURE__ */ import_react.default.createElement("div", null, "Deserialized HTML Tree (Sanitized, Safe):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(textTree1_2, null, 2))), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "simple parsing and deserializing, example of an image taken from an external server being denied"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original HTML:"), /* @__PURE__ */ import_react.default.createElement("code", null, TEXT_FROM_SERVER_2), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (can be used in dangerouslySetInnerHTML):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized2), /* @__PURE__ */ import_react.default.createElement("div", null, "Deserialized HTML Tree (Sanitized, Safe):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(textTree2, null, 2))), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "Due to configuration settings, external links are denied but internal are allowed"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original HTML:"), /* @__PURE__ */ import_react.default.createElement("code", null, TEXT_FROM_SERVER_3), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (external links are disabled):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized3), /* @__PURE__ */ import_react.default.createElement("div", null, "Deserialized HTML Tree (Sanitized, Safe):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(textTree3, null, 2))), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "This dynamic content, uses custom classes in order to apply stylistic purposes however some of these classes are not allowed and are stripped"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original HTML:"), /* @__PURE__ */ import_react.default.createElement("code", null, TEXT_FROM_SERVER_4), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (container-happy and sparkling-text are allowed):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized4), /* @__PURE__ */ import_react.default.createElement("div", null, "Displayed of sanitized"), /* @__PURE__ */ import_react.default.createElement("div", { className: "rich-text", dangerouslySetInnerHTML: { __html: sanitized4 }, style: { padding: "10px", border: "solid 1px #ccc" } }), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (containers are not allowed):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized4_2)), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "This shows image resolving, images are not expected to be part of the text itself, but rather incorportated during a postprocess based on an id, this allows for images to be retrieved dynamically"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original HTML:"), /* @__PURE__ */ import_react.default.createElement("code", null, TEXT_FROM_SERVER_5), /* @__PURE__ */ import_react.default.createElement("div", null, "Sanitized HTML (during sanitization images are resolved, since the original source isn't trusted anyway):"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized5), /* @__PURE__ */ import_react.default.createElement("div", null, "Displayed of sanitized"), /* @__PURE__ */ import_react.default.createElement("div", { className: "rich-text", dangerouslySetInnerHTML: { __html: sanitized5 }, style: { padding: "10px", border: "solid 1px #ccc" } }), /* @__PURE__ */ import_react.default.createElement("div", null, "Generated for email"), /* @__PURE__ */ import_react.default.createElement("code", null, sanitized5_2), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify({ filesToAttach, cidFilesToAttach }, null, 2))), /* @__PURE__ */ import_react.default.createElement("section", null, /* @__PURE__ */ import_react.default.createElement("h4", null, "Plain text parsing"), /* @__PURE__ */ import_react.default.createElement("div", null, "Original PLAIN TEXT:"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(TEXT_FROM_SERVER_6)), /* @__PURE__ */ import_react.default.createElement("div", null, "Deserialized Plan Text Tree (The tree can be used so the rich text editor can produce/use plain text too to keep consistency):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(textTree6, null, 2)), /* @__PURE__ */ import_react.default.createElement("div", null, "Reserialized Original:"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(reSerialized6, null, 2)), /* @__PURE__ */ import_react.default.createElement("div", null, "Reserialized Force HTML (Bad practise):"), /* @__PURE__ */ import_react.default.createElement("code", null, JSON.stringify(reSerialized6_3, null, 2))));
}
import_react_dom.default.render(/* @__PURE__ */ import_react.default.createElement(Example, null), document.querySelector("#app"));
//# sourceMappingURL=data:application/json;base64,
